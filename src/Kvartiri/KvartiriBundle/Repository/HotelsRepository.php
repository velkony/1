<?php

namespace Kvartiri\KvartiriBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * HotelsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HotelsRepository extends EntityRepository
{
    public function byCity($cityId)
    {
        $qb = $this->createQueryBuilder('u')
            ->select('u')
            ->where('u.city = :id')
            ->orderBy('u.id')
            ->setParameter('id', $cityId);
        return $qb->getQuery()->getResult();
    }

    public function search($key)
    {
//        $qb = $this->createQueryBuilder('u');
//        $qb->where(
//            $qb->expr()->like('u.name like :key')
//        )
//                ->orderBy('u.id')
//                ->setParameter('key', $key)
//                ->getQuery()
//                ->getResult();
//
//
//            ->select('u')
//            ->where('u.name like :key')
////            ->andWhere('u.disponible = 1')
//            ->orderBy('u.id')
//            ->setParameter('key', $key);
//        return $qb;

        $qb = $this->createQueryBuilder('u');
        return $qb->select('u')
            ->where(
            $qb->expr()->like('u.name', ':key')
        )
            ->orderBy('u.id')
            ->setParameter('key','%'.$key.'%')
            ->setMaxResults('4')
            ->getQuery()
            ->getResult();


//        $qb = $this->createQueryBuilder('c');
//
//        $orExpr = $qb->expr()->orX();
//
//        for ($i = 0; $i < count($tags); $i++) {
//            $orExpr->add($qb->expr()->like('c.name', "?$i"));
//
//            // You may have to set params later in a loop after $orExpr has been
//            // added to the queryBuilder.
//            $qb->setParameter($i, $tags[$i]);
//        }
//
//        $qb->select('c')->where($orExpr)->addOrderBy('c.id');
//
//        return $qb->getQuery()->getResult();
    }

    public function findArray($array)
    {
        $qb = $this->createQueryBuilder('u')
            ->Select('u')
            ->Where('u.id IN (:array)')
            ->setParameter('array', $array);
        return $qb->getQuery()->getResult();
    }

//    public function findByDate($array)
//    {
//        $qb = $this->createQueryBuilder('u')
//            ->select('u.id')
//            ->where('u.id IN (:array)')
//            ->orderBy('u.id')
//            ->setParameter('array', $array);
//        return $qb->getQuery()->getResult();
//    }

}
